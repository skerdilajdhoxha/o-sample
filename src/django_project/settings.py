"""
Django settings for skedalabs project.

Generated by 'django-admin startproject' using Django 2.1.3.

For more information on this file, see
https://docs.djangoproject.com/en/2.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/2.1/ref/settings/
"""

import logging
import os
import socket


# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/2.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = "6_jfdlksfls4x_&$4&1vj-ar_y2fldskkfsd;frqzmjf"

# Application definition

INSTALLED_APPS = [
    "django.contrib.admin",
    "django.contrib.auth",
    "django.contrib.contenttypes",
    "django.contrib.sessions",
    "django.contrib.messages",
    "django.contrib.staticfiles",
    "django.contrib.sites",
    # Third party apps
    "admin_honeypot",
    "mptt",
    "widget_tweaks",
    # Project apps
    "core",
    "accounts",
    "products",
    "invoices",
    "albums",
    "activity",
    "members",
]

MIDDLEWARE = [
    "django.middleware.security.SecurityMiddleware",
    "django.contrib.sessions.middleware.SessionMiddleware",
    "django.middleware.common.CommonMiddleware",
    "django.middleware.csrf.CsrfViewMiddleware",
    "django.contrib.auth.middleware.AuthenticationMiddleware",
    "django.contrib.messages.middleware.MessageMiddleware",
    "django.middleware.clickjacking.XFrameOptionsMiddleware",
    # custom middleware
    "core.middleware.RemoteAddrMiddleware",
]

ROOT_URLCONF = "django_project.urls"

TEMPLATES = [
    {
        "BACKEND": "django.template.backends.django.DjangoTemplates",
        "DIRS": [os.path.join(BASE_DIR, "templates")],
        "APP_DIRS": True,
        "OPTIONS": {
            "context_processors": [
                "django.template.context_processors.debug",
                "django.template.context_processors.request",
                "django.contrib.auth.context_processors.auth",
                "django.contrib.messages.context_processors.messages",
                # custom context_processors
                "core.context_processors.site_url",
            ],
        },
    },
]

WSGI_APPLICATION = "django_project.wsgi.application"


# Password validation
# https://docs.djangoproject.com/en/2.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        "NAME": "django.contrib.auth.password_validation.UserAttributeSimilarityValidator",
    },
    {"NAME": "django.contrib.auth.password_validation.MinimumLengthValidator",},
    {"NAME": "django.contrib.auth.password_validation.CommonPasswordValidator",},
    {"NAME": "django.contrib.auth.password_validation.NumericPasswordValidator",},
]


# Internationalization
# https://docs.djangoproject.com/en/2.2/topics/i18n/

LANGUAGE_CODE = "en-us"

TIME_ZONE = "UTC"

USE_I18N = True

USE_L10N = True

USE_TZ = True

SITE_ID = 1

LOGIN_URL = "login"
LOGIN_REDIRECT_URL = "core:home"
LOGOUT_REDIRECT_URL = "core:logged_out"

AUTH_USER_MODEL = "accounts.User"


EMAIL_HOST = "--------------------"
EMAIL_USE_TLS = True
EMAIL_PORT = 587
EMAIL_HOST_USER = "-------------------------------"
EMAIL_HOST_PASSWORD = "--------------"
SERVER_EMAIL = "----------------------------------"


ADMINS = [
    ("Django admin", "-----.errors_level_1@yourcompany.com"),
]

hostname = socket.gethostname()

if hostname.startswith("OHI") or hostname.startswith("ohi"):

    # SECURITY WARNING: don't run with debug turned on in production!
    DEBUG = False

    # Database
    # https://docs.djangoproject.com/en/2.2/ref/settings/#databases

    DATABASES = {
        'default': {
            'ENGINE': 'django.db.backends.postgresql_psycopg2',
            'NAME': 'ohi_shop_database',
            'USER': '-------------',
            'PASSWORD': '-------------------------------------',
            'HOST': 'localhost',
            'PORT': '',
        }
    }
    """
    DATABASES = {
        "default": {"ENGINE": "django.db.backends.sqlite3", "NAME": "mydatabase",}
    }
    """

    if hostname.startswith("OHI-SHOP-002"):

        ALLOWED_HOSTS = ['---------------------']

        STATIC_URL = "/static/"
        STATICFILES_DIRS = ("/home/django/django_project/src/static_storage/",)
        STATIC_ROOT = "/mnt/volume_001/static/"

        MEDIA_URL = "/media/"
        MEDIA_ROOT = "/mnt/volume_001/media/"
        """---------------------------------------"""

        # AWS_ACCESS_KEY_ID = '--------------------------'
        # AWS_SECRET_ACCESS_KEY = '------------------------------------'
        #
        # AWS_STORAGE_BUCKET_NAME = '------------------'
        # AWS_S3_ENDPOINT_URL = '-------------------------------'
        # # AWS_S3_CUSTOM_DOMAIN = '------------------------'
        # AWS_S3_OBJECT_PARAMETERS = {
        #     'CacheControl': 'max-age=86400',
        # }
        # AWS_LOCATION = 'static'
        # AWS_DEFAULT_ACL = 'public-read'
        #
        # STATICFILES_STORAGE = 'storages.backends.s3boto3.S3Boto3Storage'
        #
        # STATIC_URL = '{}/{}/'.format(AWS_S3_ENDPOINT_URL, AWS_LOCATION)
        # STATICFILES_DIRS = [os.path.join(BASE_DIR, "static_storage")]
        # # STATICFILES_DIRS = '/home/django/django_project/src/static_storage/'
        # # STATIC_ROOT = 'static/'
        # STATIC_ROOT = os.path.join(os.path.dirname(BASE_DIR), "static")
    else:   # if it's live server. We can't name more than one volume the same name

        ALLOWED_HOSTS = ["---------------------------"]

        STATIC_URL = "/static/"
        STATICFILES_DIRS = ("/home/django/django_project/src/static_storage/",)
        STATIC_ROOT = "/mnt/volume_01/static/"

        MEDIA_URL = "/media/"
        MEDIA_ROOT = "/mnt/volume_01/media/"
else:

    # SECURITY WARNING: don't run with debug turned on in production!
    DEBUG = True

    ALLOWED_HOSTS = ["localhost", "127.0.0.1"]

    INSTALLED_APPS += ["nplusone.ext.django"]

    MIDDLEWARE += [
        "core.middleware.metric_middleware",
    ]

    # Database
    # https://docs.djangoproject.com/en/2.2/ref/settings/#databases
    DATABASES = {
        "default": {"ENGINE": "django.db.backends.sqlite3", "NAME": "mydatabase",}
    }

    STATIC_URL = "/static/"
    STATICFILES_DIRS = [os.path.join(BASE_DIR, "static_storage")]
    STATIC_ROOT = os.path.join(os.path.dirname(BASE_DIR), "static")

    MEDIA_URL = "/media/"
    MEDIA_ROOT = os.path.join(os.path.dirname(BASE_DIR), "media")

    # nplusone -> detecting n+1 queries
    NPLUSONE_LOGGER = logging.getLogger("nplusone")
    NPLUSONE_LOG_LEVEL = logging.WARNING
    NPLUSONE_RAISE = False

    # Logging
    LOGGING = {
        "version": 1,
        "handlers": {"console": {"class": "logging.StreamHandler"},},
        "loggers": {
            "nplusone": {"handlers": ["console"], "level": "WARN",},
            "debug": {"handlers": ["console"], "level": "DEBUG",},
        },
    }

FILE_UPLOAD_MAX_MEMORY_SIZE = 10485760
DATA_UPLOAD_MAX_MEMORY_SIZE = 10485760  # this is for 10MB
FILE_UPLOAD_PERMISSIONS = 0o644
